version: '3.8'

services:
  # Single Kafka instance using Bitnami
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - kafka-net

  # Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "1660:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kraft-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

  # Redis for caching
  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - kafka-net

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: workflow-api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:vishwas1660@db.nfegitlbxqxsnbzxiteq.supabase.co:5432/postgres
      REDIS_URL: redis://redis:6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      PYTHONUNBUFFERED: 1
    volumes:
      - ./app:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - kafka
      - redis
    networks:
      - kafka-net

  # Background Event Processor
  event-processor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: event-processor
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:vishwas1660@db.nfegitlbxqxsnbzxiteq.supabase.co:5432/postgres
      REDIS_URL: redis://redis:6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      PYTHONUNBUFFERED: 1
    volumes:
      - ./app:/app
    command: python -m app.services.kafka.event_processor_service
    depends_on:
      - kafka
      - redis
      - api
    networks:
      - kafka-net

volumes:
  kafka_data:
    driver: local
  redis_data:
    driver: local

networks:
  kafka-net:
    driver: bridge